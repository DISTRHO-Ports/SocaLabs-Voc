/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"
#include "BinaryData.h"

//==============================================================================
VocAudioProcessorEditor::VocAudioProcessorEditor (VocAudioProcessor& p)
    : slAudioProcessorEditor (p), processor (p)
{
    additionalProgramming = "Neil Thapen";
    
    logo = ImageFileFormat::loadFrom (BinaryData::logo_png, BinaryData::logo_pngSize);
    
    for (slParameter* pp : p.getPluginParameters())
    {
        ParamComponent* c = pp->isOnOff() ? (ParamComponent*)new Switch (pp) : (ParamComponent*)new Knob (pp);
        
        addAndMakeVisible (c);
        controls.add (c);
    }
    
    addAndMakeVisible (&scope);
    
    setGridSize (5, 2);
    
    scope.setNumSamplesPerPixel (2);
    scope.setVerticalZoomFactor (3.0f);
}

VocAudioProcessorEditor::~VocAudioProcessorEditor()
{
}

//==============================================================================
void VocAudioProcessorEditor::paint (Graphics& g)
{
    slAudioProcessorEditor::paint (g);
        
    g.drawImageAt (logo, getWidth() / 2 - logo.getWidth() / 2, 0);
}

void VocAudioProcessorEditor::resized()
{
    using AP = VocAudioProcessor;
    
    slAudioProcessorEditor::resized();
    
    Rectangle<int> r = getControlsArea();
    
    componentForId (AP::paramTenseness)->setBounds (getGridArea (0, 0));
    componentForId (AP::paramSmoothing)->setBounds (getGridArea (0, 1));
    componentForId (AP::paramConstrictionPosition)->setBounds (getGridArea (1, 0));
    componentForId (AP::paramConstrictionAmount)->setBounds (getGridArea (1, 1));
    
    componentForId (AP::paramOutput)->setBounds (getGridArea (4, 1));

    scope.setBounds (getGridArea (2, 0, 2, 2).reduced (5));
}
